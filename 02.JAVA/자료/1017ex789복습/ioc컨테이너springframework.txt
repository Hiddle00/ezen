@Autowired
school은 

ioc에 등록(호출)과 사용은 별개

빈객체의 타입으로 꺼내면 두개이상(중복)일 가능성이 있으니 @Qualifier("lee") 같은식으로 등록

<context:annotation-config/>
>스프링 어노테이션 활성화

바뀔가능성이 있는 객체는 자바로 등록을 많이들 한다
xml방식,java방식,@Autowired 방식


@Component = @Controller = @Service = @Repository
컨트롤러 <> 레파지토리 <> 마이바티스 <> db
> 컨트롤러의 기능을 서비스로 나눈다

(게터/세터 > 대입 시 메소드로 입력값을 검증하기 위해 사용하기 시작함)

WEB-INF 아무도 접근 불가. 프로젝트 내부에서만 접근 가능
root 웹말고 다른 곳에서도 사용 가능한 것들
servlet 웹에서만 사용하는 설정들

현재프로젝트의 main은 서버가 담당 > wars
classpath는 webapp까지
톰캣리스너 > ioc컨테이너 생명주기는 톰캣과 같다


annotation-driven

requestmapping을 사용 할 때 @Controller가 아니라면 설정을 조금 바꿔줘야하기 때문에 귀찮아진다

-----------------------------------------------------------------------------------
model (MVC의 M은 DB와 관련이있다)
요청이 끝날때까지만 데이터를 잠깐 보관해놓는다. 반환되는 순간 사라진다(jsp에 값을 전달하고 사라진다)
( ${}  > el. 엄밀히는jsp. 변수의 값을 출력할 때 쓴다 )
컨트롤러에서 화면에 데이터를 전달 할 때 사용한다
화면에서 서버로는 @RequestParam, 객체
-----------------------------------------------------------------------------------
vo객체는 빈으로 등록하면 안된다

